// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gedit/promotion/promotion_investpayment.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "gedit/promotion/PromotionInvestpayment.pbobjc.h"
 #import "gedit/Common.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - IVSTPRMPromotionInvestpaymentRoot

@implementation IVSTPRMPromotionInvestpaymentRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - IVSTPRMPromotionInvestpaymentRoot_FileDescriptor

static GPBFileDescriptor *IVSTPRMPromotionInvestpaymentRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"gedit.promotion"
                                                 objcPrefix:@"IVSTPRM"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - IVSTPRMPreparInvestPaymentRequest

@implementation IVSTPRMPreparInvestPaymentRequest

@dynamic payeeUuid;
@dynamic payeeStoreUuid;
@dynamic channel;

typedef struct IVSTPRMPreparInvestPaymentRequest__storage_ {
  uint32_t _has_storage_[1];
  COMMONPaymentChannel channel;
  NSString *payeeUuid;
  NSString *payeeStoreUuid;
} IVSTPRMPreparInvestPaymentRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "payeeUuid",
        .dataTypeSpecific.className = NULL,
        .number = IVSTPRMPreparInvestPaymentRequest_FieldNumber_PayeeUuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(IVSTPRMPreparInvestPaymentRequest__storage_, payeeUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "payeeStoreUuid",
        .dataTypeSpecific.className = NULL,
        .number = IVSTPRMPreparInvestPaymentRequest_FieldNumber_PayeeStoreUuid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(IVSTPRMPreparInvestPaymentRequest__storage_, payeeStoreUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "channel",
        .dataTypeSpecific.enumDescFunc = COMMONPaymentChannel_EnumDescriptor,
        .number = IVSTPRMPreparInvestPaymentRequest_FieldNumber_Channel,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(IVSTPRMPreparInvestPaymentRequest__storage_, channel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[IVSTPRMPreparInvestPaymentRequest class]
                                     rootClass:[IVSTPRMPromotionInvestpaymentRoot class]
                                          file:IVSTPRMPromotionInvestpaymentRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(IVSTPRMPreparInvestPaymentRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\004\t\000\007\016\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t IVSTPRMPreparInvestPaymentRequest_Channel_RawValue(IVSTPRMPreparInvestPaymentRequest *message) {
  GPBDescriptor *descriptor = [IVSTPRMPreparInvestPaymentRequest descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:IVSTPRMPreparInvestPaymentRequest_FieldNumber_Channel];
  return GPBGetMessageInt32Field(message, field);
}

void SetIVSTPRMPreparInvestPaymentRequest_Channel_RawValue(IVSTPRMPreparInvestPaymentRequest *message, int32_t value) {
  GPBDescriptor *descriptor = [IVSTPRMPreparInvestPaymentRequest descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:IVSTPRMPreparInvestPaymentRequest_FieldNumber_Channel];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - IVSTPRMPrepareInvestPaymentResponse

@implementation IVSTPRMPrepareInvestPaymentResponse

@dynamic hasStatus, status;
@dynamic channelOrderUuid;

typedef struct IVSTPRMPrepareInvestPaymentResponse__storage_ {
  uint32_t _has_storage_[1];
  NSString *channelOrderUuid;
  COMMONStatus *status;
} IVSTPRMPrepareInvestPaymentResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "channelOrderUuid",
        .dataTypeSpecific.className = NULL,
        .number = IVSTPRMPrepareInvestPaymentResponse_FieldNumber_ChannelOrderUuid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(IVSTPRMPrepareInvestPaymentResponse__storage_, channelOrderUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONStatus),
        .number = IVSTPRMPrepareInvestPaymentResponse_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(IVSTPRMPrepareInvestPaymentResponse__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[IVSTPRMPrepareInvestPaymentResponse class]
                                     rootClass:[IVSTPRMPromotionInvestpaymentRoot class]
                                          file:IVSTPRMPromotionInvestpaymentRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(IVSTPRMPrepareInvestPaymentResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\033\020\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - IVSTPRMAddInvestPaymentRequest

@implementation IVSTPRMAddInvestPaymentRequest

@dynamic payeeUuid;
@dynamic payeeStoreUuid;
@dynamic shouldPay;
@dynamic discount;
@dynamic actualPay;
@dynamic channel;
@dynamic channelOrderUuid;

typedef struct IVSTPRMAddInvestPaymentRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t shouldPay;
  int32_t discount;
  int32_t actualPay;
  COMMONPaymentChannel channel;
  NSString *payeeUuid;
  NSString *payeeStoreUuid;
  NSString *channelOrderUuid;
} IVSTPRMAddInvestPaymentRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "payeeUuid",
        .dataTypeSpecific.className = NULL,
        .number = IVSTPRMAddInvestPaymentRequest_FieldNumber_PayeeUuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(IVSTPRMAddInvestPaymentRequest__storage_, payeeUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "payeeStoreUuid",
        .dataTypeSpecific.className = NULL,
        .number = IVSTPRMAddInvestPaymentRequest_FieldNumber_PayeeStoreUuid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(IVSTPRMAddInvestPaymentRequest__storage_, payeeStoreUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "shouldPay",
        .dataTypeSpecific.className = NULL,
        .number = IVSTPRMAddInvestPaymentRequest_FieldNumber_ShouldPay,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(IVSTPRMAddInvestPaymentRequest__storage_, shouldPay),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "discount",
        .dataTypeSpecific.className = NULL,
        .number = IVSTPRMAddInvestPaymentRequest_FieldNumber_Discount,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(IVSTPRMAddInvestPaymentRequest__storage_, discount),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "actualPay",
        .dataTypeSpecific.className = NULL,
        .number = IVSTPRMAddInvestPaymentRequest_FieldNumber_ActualPay,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(IVSTPRMAddInvestPaymentRequest__storage_, actualPay),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "channel",
        .dataTypeSpecific.enumDescFunc = COMMONPaymentChannel_EnumDescriptor,
        .number = IVSTPRMAddInvestPaymentRequest_FieldNumber_Channel,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(IVSTPRMAddInvestPaymentRequest__storage_, channel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "channelOrderUuid",
        .dataTypeSpecific.className = NULL,
        .number = IVSTPRMAddInvestPaymentRequest_FieldNumber_ChannelOrderUuid,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(IVSTPRMAddInvestPaymentRequest__storage_, channelOrderUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[IVSTPRMAddInvestPaymentRequest class]
                                     rootClass:[IVSTPRMPromotionInvestpaymentRoot class]
                                          file:IVSTPRMPromotionInvestpaymentRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(IVSTPRMAddInvestPaymentRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\004\t\000\007\016\000\n\t\000\020\t\000\033\020\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t IVSTPRMAddInvestPaymentRequest_Channel_RawValue(IVSTPRMAddInvestPaymentRequest *message) {
  GPBDescriptor *descriptor = [IVSTPRMAddInvestPaymentRequest descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:IVSTPRMAddInvestPaymentRequest_FieldNumber_Channel];
  return GPBGetMessageInt32Field(message, field);
}

void SetIVSTPRMAddInvestPaymentRequest_Channel_RawValue(IVSTPRMAddInvestPaymentRequest *message, int32_t value) {
  GPBDescriptor *descriptor = [IVSTPRMAddInvestPaymentRequest descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:IVSTPRMAddInvestPaymentRequest_FieldNumber_Channel];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - IVSTPRMInvestPaymentResponse

@implementation IVSTPRMInvestPaymentResponse

@dynamic hasStatus, status;
@dynamic hasRecordPayment, recordPayment;

typedef struct IVSTPRMInvestPaymentResponse__storage_ {
  uint32_t _has_storage_[1];
  IVSTPRMInvestPayment *recordPayment;
  COMMONStatus *status;
} IVSTPRMInvestPaymentResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "recordPayment",
        .dataTypeSpecific.className = GPBStringifySymbol(IVSTPRMInvestPayment),
        .number = IVSTPRMInvestPaymentResponse_FieldNumber_RecordPayment,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(IVSTPRMInvestPaymentResponse__storage_, recordPayment),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONStatus),
        .number = IVSTPRMInvestPaymentResponse_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(IVSTPRMInvestPaymentResponse__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[IVSTPRMInvestPaymentResponse class]
                                     rootClass:[IVSTPRMPromotionInvestpaymentRoot class]
                                          file:IVSTPRMPromotionInvestpaymentRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(IVSTPRMInvestPaymentResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\r\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - IVSTPRMInvestPayment

@implementation IVSTPRMInvestPayment

@dynamic uuid;
@dynamic payeeUuid;
@dynamic payeeStoreUuid;
@dynamic shouldPay;
@dynamic discount;
@dynamic actualPay;
@dynamic channel;
@dynamic channelOrderUuid;
@dynamic created;

typedef struct IVSTPRMInvestPayment__storage_ {
  uint32_t _has_storage_[1];
  int32_t shouldPay;
  int32_t discount;
  int32_t actualPay;
  COMMONPaymentChannel channel;
  NSString *uuid;
  NSString *payeeUuid;
  NSString *payeeStoreUuid;
  NSString *channelOrderUuid;
  int64_t created;
} IVSTPRMInvestPayment__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .dataTypeSpecific.className = NULL,
        .number = IVSTPRMInvestPayment_FieldNumber_Uuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(IVSTPRMInvestPayment__storage_, uuid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "payeeUuid",
        .dataTypeSpecific.className = NULL,
        .number = IVSTPRMInvestPayment_FieldNumber_PayeeUuid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(IVSTPRMInvestPayment__storage_, payeeUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "payeeStoreUuid",
        .dataTypeSpecific.className = NULL,
        .number = IVSTPRMInvestPayment_FieldNumber_PayeeStoreUuid,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(IVSTPRMInvestPayment__storage_, payeeStoreUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "shouldPay",
        .dataTypeSpecific.className = NULL,
        .number = IVSTPRMInvestPayment_FieldNumber_ShouldPay,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(IVSTPRMInvestPayment__storage_, shouldPay),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "discount",
        .dataTypeSpecific.className = NULL,
        .number = IVSTPRMInvestPayment_FieldNumber_Discount,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(IVSTPRMInvestPayment__storage_, discount),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "actualPay",
        .dataTypeSpecific.className = NULL,
        .number = IVSTPRMInvestPayment_FieldNumber_ActualPay,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(IVSTPRMInvestPayment__storage_, actualPay),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "channel",
        .dataTypeSpecific.enumDescFunc = COMMONPaymentChannel_EnumDescriptor,
        .number = IVSTPRMInvestPayment_FieldNumber_Channel,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(IVSTPRMInvestPayment__storage_, channel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "channelOrderUuid",
        .dataTypeSpecific.className = NULL,
        .number = IVSTPRMInvestPayment_FieldNumber_ChannelOrderUuid,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(IVSTPRMInvestPayment__storage_, channelOrderUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "created",
        .dataTypeSpecific.className = NULL,
        .number = IVSTPRMInvestPayment_FieldNumber_Created,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(IVSTPRMInvestPayment__storage_, created),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[IVSTPRMInvestPayment class]
                                     rootClass:[IVSTPRMPromotionInvestpaymentRoot class]
                                          file:IVSTPRMPromotionInvestpaymentRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(IVSTPRMInvestPayment__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\004\t\000\007\016\000\n\t\000\020\t\000\033\020\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t IVSTPRMInvestPayment_Channel_RawValue(IVSTPRMInvestPayment *message) {
  GPBDescriptor *descriptor = [IVSTPRMInvestPayment descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:IVSTPRMInvestPayment_FieldNumber_Channel];
  return GPBGetMessageInt32Field(message, field);
}

void SetIVSTPRMInvestPayment_Channel_RawValue(IVSTPRMInvestPayment *message, int32_t value) {
  GPBDescriptor *descriptor = [IVSTPRMInvestPayment descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:IVSTPRMInvestPayment_FieldNumber_Channel];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - IVSTPRMListInvestPaymentRequest

@implementation IVSTPRMListInvestPaymentRequest

@dynamic page;

typedef struct IVSTPRMListInvestPaymentRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t page;
} IVSTPRMListInvestPaymentRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "page",
        .dataTypeSpecific.className = NULL,
        .number = IVSTPRMListInvestPaymentRequest_FieldNumber_Page,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(IVSTPRMListInvestPaymentRequest__storage_, page),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[IVSTPRMListInvestPaymentRequest class]
                                     rootClass:[IVSTPRMPromotionInvestpaymentRoot class]
                                          file:IVSTPRMPromotionInvestpaymentRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(IVSTPRMListInvestPaymentRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - IVSTPRMGetInvestPaymentRequest

@implementation IVSTPRMGetInvestPaymentRequest

@dynamic uuid;

typedef struct IVSTPRMGetInvestPaymentRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *uuid;
} IVSTPRMGetInvestPaymentRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .dataTypeSpecific.className = NULL,
        .number = IVSTPRMGetInvestPaymentRequest_FieldNumber_Uuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(IVSTPRMGetInvestPaymentRequest__storage_, uuid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[IVSTPRMGetInvestPaymentRequest class]
                                     rootClass:[IVSTPRMPromotionInvestpaymentRoot class]
                                          file:IVSTPRMPromotionInvestpaymentRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(IVSTPRMGetInvestPaymentRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - IVSTPRMSearchInvestPaymentRequest

@implementation IVSTPRMSearchInvestPaymentRequest

@dynamic mobile;

typedef struct IVSTPRMSearchInvestPaymentRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *mobile;
} IVSTPRMSearchInvestPaymentRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "mobile",
        .dataTypeSpecific.className = NULL,
        .number = IVSTPRMSearchInvestPaymentRequest_FieldNumber_Mobile,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(IVSTPRMSearchInvestPaymentRequest__storage_, mobile),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[IVSTPRMSearchInvestPaymentRequest class]
                                     rootClass:[IVSTPRMPromotionInvestpaymentRoot class]
                                          file:IVSTPRMPromotionInvestpaymentRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(IVSTPRMSearchInvestPaymentRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
