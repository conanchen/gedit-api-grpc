// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gedit/payment/payment_inapp_payer.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "gedit/payment/PaymentInappPayer.pbobjc.h"
 #import "gedit/Common.pbobjc.h"
 #import "gedit/payment/PaymentCommon.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdirect-ivar-access"

#pragma mark - PayerActiveInappPaymentInappPayerRoot

@implementation PayerActiveInappPaymentInappPayerRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - PayerActiveInappPaymentInappPayerRoot_FileDescriptor

static GPBFileDescriptor *PayerActiveInappPaymentInappPayerRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"gedit.payment"
                                                 objcPrefix:@"PayerActiveInapp"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - PayerActiveInappGetMyPayeeCodeRequest

@implementation PayerActiveInappGetMyPayeeCodeRequest

@dynamic payeeStoreUuid;

typedef struct PayerActiveInappGetMyPayeeCodeRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *payeeStoreUuid;
} PayerActiveInappGetMyPayeeCodeRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "payeeStoreUuid",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappGetMyPayeeCodeRequest_FieldNumber_PayeeStoreUuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PayerActiveInappGetMyPayeeCodeRequest__storage_, payeeStoreUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PayerActiveInappGetMyPayeeCodeRequest class]
                                     rootClass:[PayerActiveInappPaymentInappPayerRoot class]
                                          file:PayerActiveInappPaymentInappPayerRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PayerActiveInappGetMyPayeeCodeRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\016\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PayerActiveInappGetMyPayeeCodeResponse

@implementation PayerActiveInappGetMyPayeeCodeResponse

@dynamic hasStatus, status;
@dynamic hasPayeeCode, payeeCode;

typedef struct PayerActiveInappGetMyPayeeCodeResponse__storage_ {
  uint32_t _has_storage_[1];
  PayerActiveInappPayeeCode *payeeCode;
  COMMONStatus *status;
} PayerActiveInappGetMyPayeeCodeResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "payeeCode",
        .dataTypeSpecific.className = GPBStringifySymbol(PayerActiveInappPayeeCode),
        .number = PayerActiveInappGetMyPayeeCodeResponse_FieldNumber_PayeeCode,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PayerActiveInappGetMyPayeeCodeResponse__storage_, payeeCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONStatus),
        .number = PayerActiveInappGetMyPayeeCodeResponse_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PayerActiveInappGetMyPayeeCodeResponse__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PayerActiveInappGetMyPayeeCodeResponse class]
                                     rootClass:[PayerActiveInappPaymentInappPayerRoot class]
                                          file:PayerActiveInappPaymentInappPayerRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PayerActiveInappGetMyPayeeCodeResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PayerActiveInappPayeeCode

@implementation PayerActiveInappPayeeCode

@dynamic payeeCode;
@dynamic expiresIn;
@dynamic payeeUuid;
@dynamic payeeLogo;
@dynamic payeeName;
@dynamic payeeStoreUuid;
@dynamic payeeStoreLogo;
@dynamic payeeStoreNamee;
@dynamic payeeWorkerUuid;
@dynamic payeeWorkerLogo;
@dynamic payeeWorkerName;

typedef struct PayerActiveInappPayeeCode__storage_ {
  uint32_t _has_storage_[1];
  NSString *payeeCode;
  NSString *payeeUuid;
  NSString *payeeLogo;
  NSString *payeeName;
  NSString *payeeStoreUuid;
  NSString *payeeStoreLogo;
  NSString *payeeStoreNamee;
  NSString *payeeWorkerUuid;
  NSString *payeeWorkerLogo;
  NSString *payeeWorkerName;
  int64_t expiresIn;
} PayerActiveInappPayeeCode__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "payeeCode",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappPayeeCode_FieldNumber_PayeeCode,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PayerActiveInappPayeeCode__storage_, payeeCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "expiresIn",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappPayeeCode_FieldNumber_ExpiresIn,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PayerActiveInappPayeeCode__storage_, expiresIn),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "payeeUuid",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappPayeeCode_FieldNumber_PayeeUuid,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PayerActiveInappPayeeCode__storage_, payeeUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "payeeLogo",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappPayeeCode_FieldNumber_PayeeLogo,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PayerActiveInappPayeeCode__storage_, payeeLogo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "payeeName",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappPayeeCode_FieldNumber_PayeeName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PayerActiveInappPayeeCode__storage_, payeeName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "payeeStoreUuid",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappPayeeCode_FieldNumber_PayeeStoreUuid,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PayerActiveInappPayeeCode__storage_, payeeStoreUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "payeeStoreLogo",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappPayeeCode_FieldNumber_PayeeStoreLogo,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PayerActiveInappPayeeCode__storage_, payeeStoreLogo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "payeeStoreNamee",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappPayeeCode_FieldNumber_PayeeStoreNamee,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PayerActiveInappPayeeCode__storage_, payeeStoreNamee),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "payeeWorkerUuid",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappPayeeCode_FieldNumber_PayeeWorkerUuid,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PayerActiveInappPayeeCode__storage_, payeeWorkerUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "payeeWorkerLogo",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappPayeeCode_FieldNumber_PayeeWorkerLogo,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PayerActiveInappPayeeCode__storage_, payeeWorkerLogo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "payeeWorkerName",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappPayeeCode_FieldNumber_PayeeWorkerName,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(PayerActiveInappPayeeCode__storage_, payeeWorkerName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PayerActiveInappPayeeCode class]
                                     rootClass:[PayerActiveInappPaymentInappPayerRoot class]
                                          file:PayerActiveInappPaymentInappPayerRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PayerActiveInappPayeeCode__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\013\001\t\000\003\t\000\005\t\000\007\t\000\t\t\000\r\016\000\017\016\000\021\017\000\031\017\000\033\017\000\035\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PayerActiveInappGetPayeeCodeRequest

@implementation PayerActiveInappGetPayeeCodeRequest

@dynamic payeeCode;

typedef struct PayerActiveInappGetPayeeCodeRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *payeeCode;
} PayerActiveInappGetPayeeCodeRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "payeeCode",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappGetPayeeCodeRequest_FieldNumber_PayeeCode,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PayerActiveInappGetPayeeCodeRequest__storage_, payeeCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PayerActiveInappGetPayeeCodeRequest class]
                                     rootClass:[PayerActiveInappPaymentInappPayerRoot class]
                                          file:PayerActiveInappPaymentInappPayerRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PayerActiveInappGetPayeeCodeRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\r\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PayerActiveInappGetPayeeCodeResponse

@implementation PayerActiveInappGetPayeeCodeResponse

@dynamic hasStatus, status;
@dynamic hasPayeeCode, payeeCode;

typedef struct PayerActiveInappGetPayeeCodeResponse__storage_ {
  uint32_t _has_storage_[1];
  PayerActiveInappPayeeCode *payeeCode;
  COMMONStatus *status;
} PayerActiveInappGetPayeeCodeResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "payeeCode",
        .dataTypeSpecific.className = GPBStringifySymbol(PayerActiveInappPayeeCode),
        .number = PayerActiveInappGetPayeeCodeResponse_FieldNumber_PayeeCode,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PayerActiveInappGetPayeeCodeResponse__storage_, payeeCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONStatus),
        .number = PayerActiveInappGetPayeeCodeResponse_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PayerActiveInappGetPayeeCodeResponse__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PayerActiveInappGetPayeeCodeResponse class]
                                     rootClass:[PayerActiveInappPaymentInappPayerRoot class]
                                          file:PayerActiveInappPaymentInappPayerRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PayerActiveInappGetPayeeCodeResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PayerActiveInappPreparePayerInappPaymentRequest

@implementation PayerActiveInappPreparePayerInappPaymentRequest

@dynamic payeeCode;
@dynamic shouldPay;

typedef struct PayerActiveInappPreparePayerInappPaymentRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t shouldPay;
  NSString *payeeCode;
} PayerActiveInappPreparePayerInappPaymentRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "payeeCode",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappPreparePayerInappPaymentRequest_FieldNumber_PayeeCode,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PayerActiveInappPreparePayerInappPaymentRequest__storage_, payeeCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "shouldPay",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappPreparePayerInappPaymentRequest_FieldNumber_ShouldPay,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PayerActiveInappPreparePayerInappPaymentRequest__storage_, shouldPay),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PayerActiveInappPreparePayerInappPaymentRequest class]
                                     rootClass:[PayerActiveInappPaymentInappPayerRoot class]
                                          file:PayerActiveInappPaymentInappPayerRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PayerActiveInappPreparePayerInappPaymentRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\r\t\000\017\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PayerActiveInappPreparePayerInappPaymentResponse

@implementation PayerActiveInappPreparePayerInappPaymentResponse

@dynamic hasStatus, status;
@dynamic payeeCode;
@dynamic payeeName;
@dynamic payeeStoreName;
@dynamic payeeWorkerName;
@dynamic shouldPay;
@dynamic actualPay;
@dynamic pointsPay;
@dynamic pointsRepay;
@dynamic pointsPayComment;
@dynamic pointsRepayComment;

typedef struct PayerActiveInappPreparePayerInappPaymentResponse__storage_ {
  uint32_t _has_storage_[1];
  int32_t shouldPay;
  int32_t actualPay;
  int32_t pointsPay;
  int32_t pointsRepay;
  NSString *payeeCode;
  NSString *payeeName;
  NSString *payeeStoreName;
  NSString *payeeWorkerName;
  NSString *pointsPayComment;
  NSString *pointsRepayComment;
  COMMONStatus *status;
} PayerActiveInappPreparePayerInappPaymentResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "payeeCode",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappPreparePayerInappPaymentResponse_FieldNumber_PayeeCode,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PayerActiveInappPreparePayerInappPaymentResponse__storage_, payeeCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "payeeName",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappPreparePayerInappPaymentResponse_FieldNumber_PayeeName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PayerActiveInappPreparePayerInappPaymentResponse__storage_, payeeName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "payeeStoreName",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappPreparePayerInappPaymentResponse_FieldNumber_PayeeStoreName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PayerActiveInappPreparePayerInappPaymentResponse__storage_, payeeStoreName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "payeeWorkerName",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappPreparePayerInappPaymentResponse_FieldNumber_PayeeWorkerName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PayerActiveInappPreparePayerInappPaymentResponse__storage_, payeeWorkerName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "shouldPay",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappPreparePayerInappPaymentResponse_FieldNumber_ShouldPay,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PayerActiveInappPreparePayerInappPaymentResponse__storage_, shouldPay),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "actualPay",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappPreparePayerInappPaymentResponse_FieldNumber_ActualPay,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PayerActiveInappPreparePayerInappPaymentResponse__storage_, actualPay),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pointsPay",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappPreparePayerInappPaymentResponse_FieldNumber_PointsPay,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PayerActiveInappPreparePayerInappPaymentResponse__storage_, pointsPay),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pointsRepay",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappPreparePayerInappPaymentResponse_FieldNumber_PointsRepay,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PayerActiveInappPreparePayerInappPaymentResponse__storage_, pointsRepay),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pointsPayComment",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappPreparePayerInappPaymentResponse_FieldNumber_PointsPayComment,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PayerActiveInappPreparePayerInappPaymentResponse__storage_, pointsPayComment),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pointsRepayComment",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappPreparePayerInappPaymentResponse_FieldNumber_PointsRepayComment,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(PayerActiveInappPreparePayerInappPaymentResponse__storage_, pointsRepayComment),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONStatus),
        .number = PayerActiveInappPreparePayerInappPaymentResponse_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PayerActiveInappPreparePayerInappPaymentResponse__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PayerActiveInappPreparePayerInappPaymentResponse class]
                                     rootClass:[PayerActiveInappPaymentInappPayerRoot class]
                                          file:PayerActiveInappPaymentInappPayerRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PayerActiveInappPreparePayerInappPaymentResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\n\013\t\000\014\t\000\r\016\000\016\017\000\017\t\000\020\t\000\021\t\000\022\013\000\024\020\000\025\022\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PayerActiveInappCreatePayerInappPaymentRequest

@implementation PayerActiveInappCreatePayerInappPaymentRequest

@dynamic pointsOneOfCase;
@dynamic payeeCode;
@dynamic shouldPay;
@dynamic actualPay;
@dynamic pointsPay;
@dynamic pointsRepay;
@dynamic paymentChannel;
@dynamic payerIp;

typedef struct PayerActiveInappCreatePayerInappPaymentRequest__storage_ {
  uint32_t _has_storage_[2];
  int32_t shouldPay;
  int32_t actualPay;
  int32_t pointsPay;
  int32_t pointsRepay;
  COMMONPaymentChannel paymentChannel;
  NSString *payeeCode;
  NSString *payerIp;
} PayerActiveInappCreatePayerInappPaymentRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "payeeCode",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappCreatePayerInappPaymentRequest_FieldNumber_PayeeCode,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PayerActiveInappCreatePayerInappPaymentRequest__storage_, payeeCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "shouldPay",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappCreatePayerInappPaymentRequest_FieldNumber_ShouldPay,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PayerActiveInappCreatePayerInappPaymentRequest__storage_, shouldPay),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "actualPay",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappCreatePayerInappPaymentRequest_FieldNumber_ActualPay,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PayerActiveInappCreatePayerInappPaymentRequest__storage_, actualPay),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pointsPay",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappCreatePayerInappPaymentRequest_FieldNumber_PointsPay,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(PayerActiveInappCreatePayerInappPaymentRequest__storage_, pointsPay),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pointsRepay",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappCreatePayerInappPaymentRequest_FieldNumber_PointsRepay,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(PayerActiveInappCreatePayerInappPaymentRequest__storage_, pointsRepay),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "paymentChannel",
        .dataTypeSpecific.enumDescFunc = COMMONPaymentChannel_EnumDescriptor,
        .number = PayerActiveInappCreatePayerInappPaymentRequest_FieldNumber_PaymentChannel,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PayerActiveInappCreatePayerInappPaymentRequest__storage_, paymentChannel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "payerIp",
        .dataTypeSpecific.className = NULL,
        .number = PayerActiveInappCreatePayerInappPaymentRequest_FieldNumber_PayerIp,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PayerActiveInappCreatePayerInappPaymentRequest__storage_, payerIp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PayerActiveInappCreatePayerInappPaymentRequest class]
                                     rootClass:[PayerActiveInappPaymentInappPayerRoot class]
                                          file:PayerActiveInappPaymentInappPayerRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PayerActiveInappCreatePayerInappPaymentRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    static const char *oneofs[] = {
      "points",
    };
    [localDescriptor setupOneofs:oneofs
                           count:(uint32_t)(sizeof(oneofs) / sizeof(char*))
                   firstHasIndex:-1];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\r\t\000\017\t\000\020\t\000\021\t\000\022\013\000\032\016\000\036\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PayerActiveInappCreatePayerInappPaymentRequest_PaymentChannel_RawValue(PayerActiveInappCreatePayerInappPaymentRequest *message) {
  GPBDescriptor *descriptor = [PayerActiveInappCreatePayerInappPaymentRequest descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PayerActiveInappCreatePayerInappPaymentRequest_FieldNumber_PaymentChannel];
  return GPBGetMessageInt32Field(message, field);
}

void SetPayerActiveInappCreatePayerInappPaymentRequest_PaymentChannel_RawValue(PayerActiveInappCreatePayerInappPaymentRequest *message, int32_t value) {
  GPBDescriptor *descriptor = [PayerActiveInappCreatePayerInappPaymentRequest descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PayerActiveInappCreatePayerInappPaymentRequest_FieldNumber_PaymentChannel];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

void PayerActiveInappCreatePayerInappPaymentRequest_ClearPointsOneOfCase(PayerActiveInappCreatePayerInappPaymentRequest *message) {
  GPBDescriptor *descriptor = [message descriptor];
  GPBOneofDescriptor *oneof = [descriptor.oneofs objectAtIndex:0];
  GPBMaybeClearOneof(message, oneof, -1, 0);
}

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
