// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gedit/payment/payment_query.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "gedit/payment/PaymentQuery.pbobjc.h"
 #import "gedit/payment/PaymentCommon.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - PMQRYPaymentQueryRoot

@implementation PMQRYPaymentQueryRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - PMQRYPaymentQueryRoot_FileDescriptor

static GPBFileDescriptor *PMQRYPaymentQueryRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"gedit.payment"
                                                 objcPrefix:@"PMQRY"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - PMQRYGetPaymentRequest

@implementation PMQRYGetPaymentRequest

@dynamic uuid;

typedef struct PMQRYGetPaymentRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *uuid;
} PMQRYGetPaymentRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .dataTypeSpecific.className = NULL,
        .number = PMQRYGetPaymentRequest_FieldNumber_Uuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PMQRYGetPaymentRequest__storage_, uuid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PMQRYGetPaymentRequest class]
                                     rootClass:[PMQRYPaymentQueryRoot class]
                                          file:PMQRYPaymentQueryRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PMQRYGetPaymentRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PMQRYListPaymentRequest

@implementation PMQRYListPaymentRequest

@dynamic payerUuid;
@dynamic payeePaymentCode;
@dynamic payeeUuid;
@dynamic payeeStoreUuid;
@dynamic payeeWorkerUuid;
@dynamic isAnd;
@dynamic from;
@dynamic size;

typedef struct PMQRYListPaymentRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t from;
  int32_t size;
  NSString *payerUuid;
  NSString *payeePaymentCode;
  NSString *payeeUuid;
  NSString *payeeStoreUuid;
  NSString *payeeWorkerUuid;
} PMQRYListPaymentRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "payerUuid",
        .dataTypeSpecific.className = NULL,
        .number = PMQRYListPaymentRequest_FieldNumber_PayerUuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PMQRYListPaymentRequest__storage_, payerUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "payeePaymentCode",
        .dataTypeSpecific.className = NULL,
        .number = PMQRYListPaymentRequest_FieldNumber_PayeePaymentCode,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PMQRYListPaymentRequest__storage_, payeePaymentCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "payeeUuid",
        .dataTypeSpecific.className = NULL,
        .number = PMQRYListPaymentRequest_FieldNumber_PayeeUuid,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PMQRYListPaymentRequest__storage_, payeeUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "payeeStoreUuid",
        .dataTypeSpecific.className = NULL,
        .number = PMQRYListPaymentRequest_FieldNumber_PayeeStoreUuid,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PMQRYListPaymentRequest__storage_, payeeStoreUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "payeeWorkerUuid",
        .dataTypeSpecific.className = NULL,
        .number = PMQRYListPaymentRequest_FieldNumber_PayeeWorkerUuid,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PMQRYListPaymentRequest__storage_, payeeWorkerUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isAnd",
        .dataTypeSpecific.className = NULL,
        .number = PMQRYListPaymentRequest_FieldNumber_IsAnd,
        .hasIndex = 5,
        .offset = 6,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "from",
        .dataTypeSpecific.className = NULL,
        .number = PMQRYListPaymentRequest_FieldNumber_From,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PMQRYListPaymentRequest__storage_, from),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "size",
        .dataTypeSpecific.className = NULL,
        .number = PMQRYListPaymentRequest_FieldNumber_Size,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PMQRYListPaymentRequest__storage_, size),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PMQRYListPaymentRequest class]
                                     rootClass:[PMQRYPaymentQueryRoot class]
                                          file:PMQRYPaymentQueryRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PMQRYListPaymentRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\n\t\000\013\020\000\014\t\000\r\016\000\016\017\000\030\005\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PMQRYListMyPayerPaymentRequest

@implementation PMQRYListMyPayerPaymentRequest

@dynamic from;
@dynamic size;

typedef struct PMQRYListMyPayerPaymentRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t from;
  int32_t size;
} PMQRYListMyPayerPaymentRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "from",
        .dataTypeSpecific.className = NULL,
        .number = PMQRYListMyPayerPaymentRequest_FieldNumber_From,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PMQRYListMyPayerPaymentRequest__storage_, from),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "size",
        .dataTypeSpecific.className = NULL,
        .number = PMQRYListMyPayerPaymentRequest_FieldNumber_Size,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PMQRYListMyPayerPaymentRequest__storage_, size),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PMQRYListMyPayerPaymentRequest class]
                                     rootClass:[PMQRYPaymentQueryRoot class]
                                          file:PMQRYPaymentQueryRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PMQRYListMyPayerPaymentRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PMQRYListMyPayeePaymentRequest

@implementation PMQRYListMyPayeePaymentRequest

@dynamic from;
@dynamic size;

typedef struct PMQRYListMyPayeePaymentRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t from;
  int32_t size;
} PMQRYListMyPayeePaymentRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "from",
        .dataTypeSpecific.className = NULL,
        .number = PMQRYListMyPayeePaymentRequest_FieldNumber_From,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PMQRYListMyPayeePaymentRequest__storage_, from),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "size",
        .dataTypeSpecific.className = NULL,
        .number = PMQRYListMyPayeePaymentRequest_FieldNumber_Size,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PMQRYListMyPayeePaymentRequest__storage_, size),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PMQRYListMyPayeePaymentRequest class]
                                     rootClass:[PMQRYPaymentQueryRoot class]
                                          file:PMQRYPaymentQueryRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PMQRYListMyPayeePaymentRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
