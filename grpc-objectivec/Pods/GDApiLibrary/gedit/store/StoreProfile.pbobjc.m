// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gedit/store/store_profile.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "gedit/store/StoreProfile.pbobjc.h"
 #import "gedit/Common.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdirect-ivar-access"

#pragma mark - STPRFStoreProfileRoot

@implementation STPRFStoreProfileRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - STPRFStoreProfileRoot_FileDescriptor

static GPBFileDescriptor *STPRFStoreProfileRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"gedit.store"
                                                 objcPrefix:@"STPRF"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - STPRFCreateStoreRequest

@implementation STPRFCreateStoreRequest

@dynamic name;
@dynamic detailAddress;
@dynamic introducerMobile;
@dynamic hasLocation, location;
@dynamic amapAdCode;
@dynamic amapAoiName;
@dynamic amapBuildingId;
@dynamic amapStreet;
@dynamic amapStreetNum;
@dynamic amapDistrict;
@dynamic amapCityCode;
@dynamic amapCity;
@dynamic amapProvince;
@dynamic amapCountry;

typedef struct STPRFCreateStoreRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *name;
  NSString *detailAddress;
  NSString *introducerMobile;
  COMMONLocation *location;
  NSString *amapAdCode;
  NSString *amapAoiName;
  NSString *amapBuildingId;
  NSString *amapStreet;
  NSString *amapStreetNum;
  NSString *amapDistrict;
  NSString *amapCityCode;
  NSString *amapCity;
  NSString *amapProvince;
  NSString *amapCountry;
} STPRFCreateStoreRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = STPRFCreateStoreRequest_FieldNumber_Name,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFCreateStoreRequest__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "detailAddress",
        .dataTypeSpecific.className = NULL,
        .number = STPRFCreateStoreRequest_FieldNumber_DetailAddress,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STPRFCreateStoreRequest__storage_, detailAddress),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "introducerMobile",
        .dataTypeSpecific.className = NULL,
        .number = STPRFCreateStoreRequest_FieldNumber_IntroducerMobile,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(STPRFCreateStoreRequest__storage_, introducerMobile),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "location",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONLocation),
        .number = STPRFCreateStoreRequest_FieldNumber_Location,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(STPRFCreateStoreRequest__storage_, location),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "amapAdCode",
        .dataTypeSpecific.className = NULL,
        .number = STPRFCreateStoreRequest_FieldNumber_AmapAdCode,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(STPRFCreateStoreRequest__storage_, amapAdCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amapAoiName",
        .dataTypeSpecific.className = NULL,
        .number = STPRFCreateStoreRequest_FieldNumber_AmapAoiName,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(STPRFCreateStoreRequest__storage_, amapAoiName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amapBuildingId",
        .dataTypeSpecific.className = NULL,
        .number = STPRFCreateStoreRequest_FieldNumber_AmapBuildingId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(STPRFCreateStoreRequest__storage_, amapBuildingId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amapStreet",
        .dataTypeSpecific.className = NULL,
        .number = STPRFCreateStoreRequest_FieldNumber_AmapStreet,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(STPRFCreateStoreRequest__storage_, amapStreet),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amapStreetNum",
        .dataTypeSpecific.className = NULL,
        .number = STPRFCreateStoreRequest_FieldNumber_AmapStreetNum,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(STPRFCreateStoreRequest__storage_, amapStreetNum),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amapDistrict",
        .dataTypeSpecific.className = NULL,
        .number = STPRFCreateStoreRequest_FieldNumber_AmapDistrict,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(STPRFCreateStoreRequest__storage_, amapDistrict),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amapCityCode",
        .dataTypeSpecific.className = NULL,
        .number = STPRFCreateStoreRequest_FieldNumber_AmapCityCode,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(STPRFCreateStoreRequest__storage_, amapCityCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amapCity",
        .dataTypeSpecific.className = NULL,
        .number = STPRFCreateStoreRequest_FieldNumber_AmapCity,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(STPRFCreateStoreRequest__storage_, amapCity),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amapProvince",
        .dataTypeSpecific.className = NULL,
        .number = STPRFCreateStoreRequest_FieldNumber_AmapProvince,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(STPRFCreateStoreRequest__storage_, amapProvince),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amapCountry",
        .dataTypeSpecific.className = NULL,
        .number = STPRFCreateStoreRequest_FieldNumber_AmapCountry,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(STPRFCreateStoreRequest__storage_, amapCountry),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFCreateStoreRequest class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFCreateStoreRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\014\002\r\000\004\020\000\024\n\000\025\013\000\026\016\000\027\n\000\030\r\000\031\014\000\032\014\000\033\010\000\034\014\000\035\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STPRFCreateStoreResponse

@implementation STPRFCreateStoreResponse

@dynamic hasStatus, status;
@dynamic uuid;
@dynamic name;
@dynamic ownerUuid;

typedef struct STPRFCreateStoreResponse__storage_ {
  uint32_t _has_storage_[1];
  NSString *uuid;
  NSString *name;
  NSString *ownerUuid;
  COMMONStatus *status;
} STPRFCreateStoreResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .dataTypeSpecific.className = NULL,
        .number = STPRFCreateStoreResponse_FieldNumber_Uuid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STPRFCreateStoreResponse__storage_, uuid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = STPRFCreateStoreResponse_FieldNumber_Name,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(STPRFCreateStoreResponse__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "ownerUuid",
        .dataTypeSpecific.className = NULL,
        .number = STPRFCreateStoreResponse_FieldNumber_OwnerUuid,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(STPRFCreateStoreResponse__storage_, ownerUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONStatus),
        .number = STPRFCreateStoreResponse_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFCreateStoreResponse__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFCreateStoreResponse class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFCreateStoreResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\003\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STPRFUpsertWithAampPoiRequest

@implementation STPRFUpsertWithAampPoiRequest

@dynamic id_p;
@dynamic name;
@dynamic address;
@dynamic hasLocation, location;
@dynamic tel;
@dynamic adcode;

typedef struct STPRFUpsertWithAampPoiRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *id_p;
  NSString *name;
  NSString *address;
  COMMONLocation *location;
  NSString *tel;
  NSString *adcode;
} STPRFUpsertWithAampPoiRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpsertWithAampPoiRequest_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFUpsertWithAampPoiRequest__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpsertWithAampPoiRequest_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STPRFUpsertWithAampPoiRequest__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "address",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpsertWithAampPoiRequest_FieldNumber_Address,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(STPRFUpsertWithAampPoiRequest__storage_, address),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "location",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONLocation),
        .number = STPRFUpsertWithAampPoiRequest_FieldNumber_Location,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(STPRFUpsertWithAampPoiRequest__storage_, location),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "tel",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpsertWithAampPoiRequest_FieldNumber_Tel,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(STPRFUpsertWithAampPoiRequest__storage_, tel),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "adcode",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpsertWithAampPoiRequest_FieldNumber_Adcode,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(STPRFUpsertWithAampPoiRequest__storage_, adcode),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFUpsertWithAampPoiRequest class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFUpsertWithAampPoiRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STPRFUpsertWithAampPoiResponse

@implementation STPRFUpsertWithAampPoiResponse

@dynamic hasStatus, status;
@dynamic uuid;

typedef struct STPRFUpsertWithAampPoiResponse__storage_ {
  uint32_t _has_storage_[1];
  NSString *uuid;
  COMMONStatus *status;
} STPRFUpsertWithAampPoiResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpsertWithAampPoiResponse_FieldNumber_Uuid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STPRFUpsertWithAampPoiResponse__storage_, uuid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONStatus),
        .number = STPRFUpsertWithAampPoiResponse_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFUpsertWithAampPoiResponse__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFUpsertWithAampPoiResponse class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFUpsertWithAampPoiResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STPRFUpdateStoreRequest

@implementation STPRFUpdateStoreRequest

@dynamic propertyOneOfCase;
@dynamic uuid;
@dynamic name;
@dynamic logo;
@dynamic location;
@dynamic type;
@dynamic desc;
@dynamic pointsRate;
@dynamic districtUuid;
@dynamic detailAddress;
@dynamic photos;
@dynamic tels;
@dynamic workingTime;
@dynamic active;

typedef struct STPRFUpdateStoreRequest__storage_ {
  uint32_t _has_storage_[2];
  NSString *uuid;
  NSString *name;
  NSString *logo;
  COMMONLocation *location;
  NSString *type;
  NSString *desc;
  NSString *districtUuid;
  NSString *detailAddress;
  COMMONListString *photos;
  COMMONListString *tels;
  STPRFWorkingTime *workingTime;
  double pointsRate;
} STPRFUpdateStoreRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpdateStoreRequest_FieldNumber_Uuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFUpdateStoreRequest__storage_, uuid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpdateStoreRequest_FieldNumber_Name,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(STPRFUpdateStoreRequest__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "logo",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpdateStoreRequest_FieldNumber_Logo,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(STPRFUpdateStoreRequest__storage_, logo),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "location",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONLocation),
        .number = STPRFUpdateStoreRequest_FieldNumber_Location,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(STPRFUpdateStoreRequest__storage_, location),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpdateStoreRequest_FieldNumber_Type,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(STPRFUpdateStoreRequest__storage_, type),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "desc",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpdateStoreRequest_FieldNumber_Desc,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(STPRFUpdateStoreRequest__storage_, desc),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pointsRate",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpdateStoreRequest_FieldNumber_PointsRate,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(STPRFUpdateStoreRequest__storage_, pointsRate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "districtUuid",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpdateStoreRequest_FieldNumber_DistrictUuid,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(STPRFUpdateStoreRequest__storage_, districtUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "detailAddress",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpdateStoreRequest_FieldNumber_DetailAddress,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(STPRFUpdateStoreRequest__storage_, detailAddress),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "photos",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONListString),
        .number = STPRFUpdateStoreRequest_FieldNumber_Photos,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(STPRFUpdateStoreRequest__storage_, photos),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "tels",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONListString),
        .number = STPRFUpdateStoreRequest_FieldNumber_Tels,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(STPRFUpdateStoreRequest__storage_, tels),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "workingTime",
        .dataTypeSpecific.className = GPBStringifySymbol(STPRFWorkingTime),
        .number = STPRFUpdateStoreRequest_FieldNumber_WorkingTime,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(STPRFUpdateStoreRequest__storage_, workingTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "active",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpdateStoreRequest_FieldNumber_Active,
        .hasIndex = -1,
        .offset = 1,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFUpdateStoreRequest class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFUpdateStoreRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    static const char *oneofs[] = {
      "property",
    };
    [localDescriptor setupOneofs:oneofs
                           count:(uint32_t)(sizeof(oneofs) / sizeof(char*))
                   firstHasIndex:-1];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\010\n\000\t\014\000\n\r\000\r\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

void STPRFUpdateStoreRequest_ClearPropertyOneOfCase(STPRFUpdateStoreRequest *message) {
  GPBDescriptor *descriptor = [message descriptor];
  GPBOneofDescriptor *oneof = [descriptor.oneofs objectAtIndex:0];
  GPBMaybeClearOneof(message, oneof, -1, 0);
}
#pragma mark - STPRFWorkingTime

@implementation STPRFWorkingTime

@dynamic start;
@dynamic end;

typedef struct STPRFWorkingTime__storage_ {
  uint32_t _has_storage_[1];
  int64_t start;
  int64_t end;
} STPRFWorkingTime__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "start",
        .dataTypeSpecific.className = NULL,
        .number = STPRFWorkingTime_FieldNumber_Start,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFWorkingTime__storage_, start),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "end",
        .dataTypeSpecific.className = NULL,
        .number = STPRFWorkingTime_FieldNumber_End,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STPRFWorkingTime__storage_, end),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFWorkingTime class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFWorkingTime__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STPRFUpdateStoreResponse

@implementation STPRFUpdateStoreResponse

@dynamic hasStatus, status;
@dynamic uuid;
@dynamic lastUpdated;

typedef struct STPRFUpdateStoreResponse__storage_ {
  uint32_t _has_storage_[1];
  NSString *uuid;
  COMMONStatus *status;
  int64_t lastUpdated;
} STPRFUpdateStoreResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpdateStoreResponse_FieldNumber_Uuid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STPRFUpdateStoreResponse__storage_, uuid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "lastUpdated",
        .dataTypeSpecific.className = NULL,
        .number = STPRFUpdateStoreResponse_FieldNumber_LastUpdated,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(STPRFUpdateStoreResponse__storage_, lastUpdated),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONStatus),
        .number = STPRFUpdateStoreResponse_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFUpdateStoreResponse__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFUpdateStoreResponse class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFUpdateStoreResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\002\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STPRFGetStoreRequest

@implementation STPRFGetStoreRequest

@dynamic uuid;
@dynamic lastUpdated;

typedef struct STPRFGetStoreRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *uuid;
  int64_t lastUpdated;
} STPRFGetStoreRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .dataTypeSpecific.className = NULL,
        .number = STPRFGetStoreRequest_FieldNumber_Uuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFGetStoreRequest__storage_, uuid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "lastUpdated",
        .dataTypeSpecific.className = NULL,
        .number = STPRFGetStoreRequest_FieldNumber_LastUpdated,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STPRFGetStoreRequest__storage_, lastUpdated),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFGetStoreRequest class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFGetStoreRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\002\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STPRFListStoreRequest

@implementation STPRFListStoreRequest

@dynamic type;
@dynamic from;
@dynamic size;

typedef struct STPRFListStoreRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t from;
  int32_t size;
  NSString *type;
} STPRFListStoreRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = STPRFListStoreRequest_FieldNumber_Type,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFListStoreRequest__storage_, type),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "from",
        .dataTypeSpecific.className = NULL,
        .number = STPRFListStoreRequest_FieldNumber_From,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STPRFListStoreRequest__storage_, from),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "size",
        .dataTypeSpecific.className = NULL,
        .number = STPRFListStoreRequest_FieldNumber_Size,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(STPRFListStoreRequest__storage_, size),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFListStoreRequest class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFListStoreRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STPRFFindByNameRequest

@implementation STPRFFindByNameRequest

@dynamic name;
@dynamic from;
@dynamic size;

typedef struct STPRFFindByNameRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t from;
  int32_t size;
  NSString *name;
} STPRFFindByNameRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = STPRFFindByNameRequest_FieldNumber_Name,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFFindByNameRequest__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "from",
        .dataTypeSpecific.className = NULL,
        .number = STPRFFindByNameRequest_FieldNumber_From,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STPRFFindByNameRequest__storage_, from),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "size",
        .dataTypeSpecific.className = NULL,
        .number = STPRFFindByNameRequest_FieldNumber_Size,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(STPRFFindByNameRequest__storage_, size),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFFindByNameRequest class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFFindByNameRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STPRFStoreProfileResponse

@implementation STPRFStoreProfileResponse

@dynamic hasStatus, status;
@dynamic hasStoreProfile, storeProfile;

typedef struct STPRFStoreProfileResponse__storage_ {
  uint32_t _has_storage_[1];
  STPRFStoreProfile *storeProfile;
  COMMONStatus *status;
} STPRFStoreProfileResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "storeProfile",
        .dataTypeSpecific.className = GPBStringifySymbol(STPRFStoreProfile),
        .number = STPRFStoreProfileResponse_FieldNumber_StoreProfile,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STPRFStoreProfileResponse__storage_, storeProfile),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONStatus),
        .number = STPRFStoreProfileResponse_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFStoreProfileResponse__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFStoreProfileResponse class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFStoreProfileResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\014\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STPRFStoreProfile

@implementation STPRFStoreProfile

@dynamic uuid;
@dynamic name;
@dynamic logo;
@dynamic hasLocation, location;
@dynamic type;
@dynamic desc;
@dynamic pointsRate;
@dynamic districtUuid;
@dynamic detailAddress;
@dynamic hasPhotos, photos;
@dynamic introducerUuid;
@dynamic hasTels, tels;
@dynamic amapAdCode;
@dynamic amapAoiName;
@dynamic amapBuildingId;
@dynamic amapStreet;
@dynamic amapStreetNum;
@dynamic amapDistrict;
@dynamic amapCityCode;
@dynamic amapCity;
@dynamic amapProvince;
@dynamic amapCountry;
@dynamic amapPoiId;
@dynamic active;
@dynamic from;

typedef struct STPRFStoreProfile__storage_ {
  uint32_t _has_storage_[1];
  int32_t from;
  NSString *uuid;
  NSString *name;
  NSString *logo;
  COMMONLocation *location;
  NSString *type;
  NSString *desc;
  NSString *districtUuid;
  NSString *detailAddress;
  COMMONListString *photos;
  NSString *introducerUuid;
  COMMONListString *tels;
  NSString *amapAdCode;
  NSString *amapAoiName;
  NSString *amapBuildingId;
  NSString *amapStreet;
  NSString *amapStreetNum;
  NSString *amapDistrict;
  NSString *amapCityCode;
  NSString *amapCity;
  NSString *amapProvince;
  NSString *amapCountry;
  NSString *amapPoiId;
  double pointsRate;
} STPRFStoreProfile__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_Uuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, uuid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, name),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "logo",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_Logo,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, logo),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "location",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONLocation),
        .number = STPRFStoreProfile_FieldNumber_Location,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, location),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_Type,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, type),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "desc",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_Desc,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, desc),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pointsRate",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_PointsRate,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, pointsRate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "districtUuid",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_DistrictUuid,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, districtUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "detailAddress",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_DetailAddress,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, detailAddress),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "photos",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONListString),
        .number = STPRFStoreProfile_FieldNumber_Photos,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, photos),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "introducerUuid",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_IntroducerUuid,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, introducerUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "tels",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONListString),
        .number = STPRFStoreProfile_FieldNumber_Tels,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, tels),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "amapAdCode",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_AmapAdCode,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, amapAdCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amapAoiName",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_AmapAoiName,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, amapAoiName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amapBuildingId",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_AmapBuildingId,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, amapBuildingId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amapStreet",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_AmapStreet,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, amapStreet),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amapStreetNum",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_AmapStreetNum,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, amapStreetNum),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amapDistrict",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_AmapDistrict,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, amapDistrict),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amapCityCode",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_AmapCityCode,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, amapCityCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amapCity",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_AmapCity,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, amapCity),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amapProvince",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_AmapProvince,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, amapProvince),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amapCountry",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_AmapCountry,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, amapCountry),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amapPoiId",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_AmapPoiId,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, amapPoiId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "active",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_Active,
        .hasIndex = 23,
        .offset = 24,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "from",
        .dataTypeSpecific.className = NULL,
        .number = STPRFStoreProfile_FieldNumber_From,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(STPRFStoreProfile__storage_, from),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFStoreProfile class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFStoreProfile__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\017\010\n\000\t\014\000\n\r\000\014\016\000\024\n\000\025\013\000\026\016\000\027\n\000\030\r\000\031\014\000\032\014\000\033\010\000\034\014\000"
        "\035\013\000\036\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STPRFBanStoreRequest

@implementation STPRFBanStoreRequest

@dynamic uuid;
@dynamic active;

typedef struct STPRFBanStoreRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *uuid;
} STPRFBanStoreRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .dataTypeSpecific.className = NULL,
        .number = STPRFBanStoreRequest_FieldNumber_Uuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFBanStoreRequest__storage_, uuid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "active",
        .dataTypeSpecific.className = NULL,
        .number = STPRFBanStoreRequest_FieldNumber_Active,
        .hasIndex = 1,
        .offset = 2,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFBanStoreRequest class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFBanStoreRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STPRFBanStoreResponse

@implementation STPRFBanStoreResponse

@dynamic hasStatus, status;
@dynamic uuid;
@dynamic active;

typedef struct STPRFBanStoreResponse__storage_ {
  uint32_t _has_storage_[1];
  NSString *uuid;
  COMMONStatus *status;
} STPRFBanStoreResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .dataTypeSpecific.className = NULL,
        .number = STPRFBanStoreResponse_FieldNumber_Uuid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STPRFBanStoreResponse__storage_, uuid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "active",
        .dataTypeSpecific.className = NULL,
        .number = STPRFBanStoreResponse_FieldNumber_Active,
        .hasIndex = 2,
        .offset = 3,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONStatus),
        .number = STPRFBanStoreResponse_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STPRFBanStoreResponse__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STPRFBanStoreResponse class]
                                     rootClass:[STPRFStoreProfileRoot class]
                                          file:STPRFStoreProfileRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STPRFBanStoreResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
