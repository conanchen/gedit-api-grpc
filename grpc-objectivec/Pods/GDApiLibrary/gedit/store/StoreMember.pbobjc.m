// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gedit/store/store_member.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "gedit/store/StoreMember.pbobjc.h"
 #import "gedit/Common.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdirect-ivar-access"

#pragma mark - STMEMStoreMemberRoot

@implementation STMEMStoreMemberRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - STMEMStoreMemberRoot_FileDescriptor

static GPBFileDescriptor *STMEMStoreMemberRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"gedit.store"
                                                 objcPrefix:@"STMEM"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - STMEMAddMembershipRequest

@implementation STMEMAddMembershipRequest

@dynamic storeUuid;
@dynamic userUuid;

typedef struct STMEMAddMembershipRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *storeUuid;
  NSString *userUuid;
} STMEMAddMembershipRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "storeUuid",
        .dataTypeSpecific.className = NULL,
        .number = STMEMAddMembershipRequest_FieldNumber_StoreUuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STMEMAddMembershipRequest__storage_, storeUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userUuid",
        .dataTypeSpecific.className = NULL,
        .number = STMEMAddMembershipRequest_FieldNumber_UserUuid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STMEMAddMembershipRequest__storage_, userUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STMEMAddMembershipRequest class]
                                     rootClass:[STMEMStoreMemberRoot class]
                                          file:STMEMStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STMEMAddMembershipRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\t\000\003\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STMEMUpdateMembershipRequest

@implementation STMEMUpdateMembershipRequest

@dynamic propertyOneOfCase;
@dynamic userUuid;
@dynamic storeUuid;
@dynamic memberType;
@dynamic startTime;
@dynamic endTime;

typedef struct STMEMUpdateMembershipRequest__storage_ {
  uint32_t _has_storage_[2];
  NSString *userUuid;
  NSString *memberType;
  NSString *storeUuid;
  int64_t startTime;
  int64_t endTime;
} STMEMUpdateMembershipRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userUuid",
        .dataTypeSpecific.className = NULL,
        .number = STMEMUpdateMembershipRequest_FieldNumber_UserUuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STMEMUpdateMembershipRequest__storage_, userUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "memberType",
        .dataTypeSpecific.className = NULL,
        .number = STMEMUpdateMembershipRequest_FieldNumber_MemberType,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(STMEMUpdateMembershipRequest__storage_, memberType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "storeUuid",
        .dataTypeSpecific.className = NULL,
        .number = STMEMUpdateMembershipRequest_FieldNumber_StoreUuid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STMEMUpdateMembershipRequest__storage_, storeUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "startTime",
        .dataTypeSpecific.className = NULL,
        .number = STMEMUpdateMembershipRequest_FieldNumber_StartTime,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(STMEMUpdateMembershipRequest__storage_, startTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "endTime",
        .dataTypeSpecific.className = NULL,
        .number = STMEMUpdateMembershipRequest_FieldNumber_EndTime,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(STMEMUpdateMembershipRequest__storage_, endTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STMEMUpdateMembershipRequest class]
                                     rootClass:[STMEMStoreMemberRoot class]
                                          file:STMEMStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STMEMUpdateMembershipRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    static const char *oneofs[] = {
      "property",
    };
    [localDescriptor setupOneofs:oneofs
                           count:(uint32_t)(sizeof(oneofs) / sizeof(char*))
                   firstHasIndex:-1];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001\010\000\003\n\000\005\t\000\t\t\000\n\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

void STMEMUpdateMembershipRequest_ClearPropertyOneOfCase(STMEMUpdateMembershipRequest *message) {
  GPBDescriptor *descriptor = [message descriptor];
  GPBOneofDescriptor *oneof = [descriptor.oneofs objectAtIndex:0];
  GPBMaybeClearOneof(message, oneof, -1, 0);
}
#pragma mark - STMEMListMyMemberStoreRequest

@implementation STMEMListMyMemberStoreRequest

@dynamic lastUpdated;

typedef struct STMEMListMyMemberStoreRequest__storage_ {
  uint32_t _has_storage_[1];
  int64_t lastUpdated;
} STMEMListMyMemberStoreRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "lastUpdated",
        .dataTypeSpecific.className = NULL,
        .number = STMEMListMyMemberStoreRequest_FieldNumber_LastUpdated,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STMEMListMyMemberStoreRequest__storage_, lastUpdated),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STMEMListMyMemberStoreRequest class]
                                     rootClass:[STMEMStoreMemberRoot class]
                                          file:STMEMStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STMEMListMyMemberStoreRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STMEMListMembershipByStoreRequest

@implementation STMEMListMembershipByStoreRequest

@dynamic storeUuid;
@dynamic from;
@dynamic size;

typedef struct STMEMListMembershipByStoreRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t from;
  int32_t size;
  NSString *storeUuid;
} STMEMListMembershipByStoreRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "storeUuid",
        .dataTypeSpecific.className = NULL,
        .number = STMEMListMembershipByStoreRequest_FieldNumber_StoreUuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STMEMListMembershipByStoreRequest__storage_, storeUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "from",
        .dataTypeSpecific.className = NULL,
        .number = STMEMListMembershipByStoreRequest_FieldNumber_From,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STMEMListMembershipByStoreRequest__storage_, from),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "size",
        .dataTypeSpecific.className = NULL,
        .number = STMEMListMembershipByStoreRequest_FieldNumber_Size,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(STMEMListMembershipByStoreRequest__storage_, size),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STMEMListMembershipByStoreRequest class]
                                     rootClass:[STMEMStoreMemberRoot class]
                                          file:STMEMStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STMEMListMembershipByStoreRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STMEMListMembershipByMemberRequest

@implementation STMEMListMembershipByMemberRequest

@dynamic userUuid;
@dynamic from;
@dynamic size;

typedef struct STMEMListMembershipByMemberRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t from;
  int32_t size;
  NSString *userUuid;
} STMEMListMembershipByMemberRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userUuid",
        .dataTypeSpecific.className = NULL,
        .number = STMEMListMembershipByMemberRequest_FieldNumber_UserUuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STMEMListMembershipByMemberRequest__storage_, userUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "from",
        .dataTypeSpecific.className = NULL,
        .number = STMEMListMembershipByMemberRequest_FieldNumber_From,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STMEMListMembershipByMemberRequest__storage_, from),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "size",
        .dataTypeSpecific.className = NULL,
        .number = STMEMListMembershipByMemberRequest_FieldNumber_Size,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(STMEMListMembershipByMemberRequest__storage_, size),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STMEMListMembershipByMemberRequest class]
                                     rootClass:[STMEMStoreMemberRoot class]
                                          file:STMEMStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STMEMListMembershipByMemberRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\003\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STMEMMembershipResponse

@implementation STMEMMembershipResponse

@dynamic hasStatus, status;
@dynamic hasMembership, membership;
@dynamic from;

typedef struct STMEMMembershipResponse__storage_ {
  uint32_t _has_storage_[1];
  int32_t from;
  STMEMMembership *membership;
  COMMONStatus *status;
} STMEMMembershipResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "membership",
        .dataTypeSpecific.className = GPBStringifySymbol(STMEMMembership),
        .number = STMEMMembershipResponse_FieldNumber_Membership,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STMEMMembershipResponse__storage_, membership),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "from",
        .dataTypeSpecific.className = NULL,
        .number = STMEMMembershipResponse_FieldNumber_From,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(STMEMMembershipResponse__storage_, from),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONStatus),
        .number = STMEMMembershipResponse_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STMEMMembershipResponse__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STMEMMembershipResponse class]
                                     rootClass:[STMEMStoreMemberRoot class]
                                          file:STMEMStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STMEMMembershipResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STMEMBanMembershipRequest

@implementation STMEMBanMembershipRequest

@dynamic userUuid;
@dynamic storeUuid;
@dynamic active;

typedef struct STMEMBanMembershipRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *userUuid;
  NSString *storeUuid;
} STMEMBanMembershipRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userUuid",
        .dataTypeSpecific.className = NULL,
        .number = STMEMBanMembershipRequest_FieldNumber_UserUuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STMEMBanMembershipRequest__storage_, userUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "storeUuid",
        .dataTypeSpecific.className = NULL,
        .number = STMEMBanMembershipRequest_FieldNumber_StoreUuid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STMEMBanMembershipRequest__storage_, storeUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "active",
        .dataTypeSpecific.className = NULL,
        .number = STMEMBanMembershipRequest_FieldNumber_Active,
        .hasIndex = 2,
        .offset = 3,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STMEMBanMembershipRequest class]
                                     rootClass:[STMEMStoreMemberRoot class]
                                          file:STMEMStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STMEMBanMembershipRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\010\000\005\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STMEMBanMembershipResponse

@implementation STMEMBanMembershipResponse

@dynamic hasStatus, status;
@dynamic hasMembership, membership;

typedef struct STMEMBanMembershipResponse__storage_ {
  uint32_t _has_storage_[1];
  STMEMMembership *membership;
  COMMONStatus *status;
} STMEMBanMembershipResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "membership",
        .dataTypeSpecific.className = GPBStringifySymbol(STMEMMembership),
        .number = STMEMBanMembershipResponse_FieldNumber_Membership,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STMEMBanMembershipResponse__storage_, membership),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONStatus),
        .number = STMEMBanMembershipResponse_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STMEMBanMembershipResponse__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STMEMBanMembershipResponse class]
                                     rootClass:[STMEMStoreMemberRoot class]
                                          file:STMEMStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STMEMBanMembershipResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STMEMMembership

@implementation STMEMMembership

@dynamic userUuid;
@dynamic memberType;
@dynamic storeUuid;
@dynamic storeName;
@dynamic storeLogo;
@dynamic hasLocation, location;
@dynamic active;
@dynamic created;
@dynamic lastUpdated;

typedef struct STMEMMembership__storage_ {
  uint32_t _has_storage_[1];
  NSString *userUuid;
  NSString *memberType;
  NSString *storeUuid;
  NSString *storeName;
  NSString *storeLogo;
  COMMONLocation *location;
  int64_t created;
  int64_t lastUpdated;
} STMEMMembership__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userUuid",
        .dataTypeSpecific.className = NULL,
        .number = STMEMMembership_FieldNumber_UserUuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STMEMMembership__storage_, userUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "memberType",
        .dataTypeSpecific.className = NULL,
        .number = STMEMMembership_FieldNumber_MemberType,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STMEMMembership__storage_, memberType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "storeUuid",
        .dataTypeSpecific.className = NULL,
        .number = STMEMMembership_FieldNumber_StoreUuid,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(STMEMMembership__storage_, storeUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "storeName",
        .dataTypeSpecific.className = NULL,
        .number = STMEMMembership_FieldNumber_StoreName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(STMEMMembership__storage_, storeName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "storeLogo",
        .dataTypeSpecific.className = NULL,
        .number = STMEMMembership_FieldNumber_StoreLogo,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(STMEMMembership__storage_, storeLogo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "location",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONLocation),
        .number = STMEMMembership_FieldNumber_Location,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(STMEMMembership__storage_, location),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "active",
        .dataTypeSpecific.className = NULL,
        .number = STMEMMembership_FieldNumber_Active,
        .hasIndex = 6,
        .offset = 7,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "created",
        .dataTypeSpecific.className = NULL,
        .number = STMEMMembership_FieldNumber_Created,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(STMEMMembership__storage_, created),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "lastUpdated",
        .dataTypeSpecific.className = NULL,
        .number = STMEMMembership_FieldNumber_LastUpdated,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(STMEMMembership__storage_, lastUpdated),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STMEMMembership class]
                                     rootClass:[STMEMStoreMemberRoot class]
                                          file:STMEMStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STMEMMembership__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\001\010\000\003\n\000\005\t\000\007\t\000\t\t\000\036\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
