// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gedit/store/store_member.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "gedit/store/StoreMember.pbobjc.h"
 #import "gedit/Common.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdirect-ivar-access"

#pragma mark - GDAStoreMemberRoot

@implementation GDAStoreMemberRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - GDAStoreMemberRoot_FileDescriptor

static GPBFileDescriptor *GDAStoreMemberRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"gedit.store"
                                                 objcPrefix:@"GDA"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - GDAAddMembershipRequest

@implementation GDAAddMembershipRequest

@dynamic storeUuid;
@dynamic userUuid;

typedef struct GDAAddMembershipRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *storeUuid;
  NSString *userUuid;
} GDAAddMembershipRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "storeUuid",
        .dataTypeSpecific.className = NULL,
        .number = GDAAddMembershipRequest_FieldNumber_StoreUuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GDAAddMembershipRequest__storage_, storeUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userUuid",
        .dataTypeSpecific.className = NULL,
        .number = GDAAddMembershipRequest_FieldNumber_UserUuid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GDAAddMembershipRequest__storage_, userUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GDAAddMembershipRequest class]
                                     rootClass:[GDAStoreMemberRoot class]
                                          file:GDAStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GDAAddMembershipRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\t\000\003\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GDAUpdateMembershipRequest

@implementation GDAUpdateMembershipRequest

@dynamic propertyOneOfCase;
@dynamic userUuid;
@dynamic storeUuid;
@dynamic memberType;
@dynamic startTime;
@dynamic endTime;

typedef struct GDAUpdateMembershipRequest__storage_ {
  uint32_t _has_storage_[2];
  NSString *userUuid;
  NSString *memberType;
  NSString *storeUuid;
  int64_t startTime;
  int64_t endTime;
} GDAUpdateMembershipRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userUuid",
        .dataTypeSpecific.className = NULL,
        .number = GDAUpdateMembershipRequest_FieldNumber_UserUuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GDAUpdateMembershipRequest__storage_, userUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "memberType",
        .dataTypeSpecific.className = NULL,
        .number = GDAUpdateMembershipRequest_FieldNumber_MemberType,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(GDAUpdateMembershipRequest__storage_, memberType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "storeUuid",
        .dataTypeSpecific.className = NULL,
        .number = GDAUpdateMembershipRequest_FieldNumber_StoreUuid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GDAUpdateMembershipRequest__storage_, storeUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "startTime",
        .dataTypeSpecific.className = NULL,
        .number = GDAUpdateMembershipRequest_FieldNumber_StartTime,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(GDAUpdateMembershipRequest__storage_, startTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "endTime",
        .dataTypeSpecific.className = NULL,
        .number = GDAUpdateMembershipRequest_FieldNumber_EndTime,
        .hasIndex = -1,
        .offset = (uint32_t)offsetof(GDAUpdateMembershipRequest__storage_, endTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GDAUpdateMembershipRequest class]
                                     rootClass:[GDAStoreMemberRoot class]
                                          file:GDAStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GDAUpdateMembershipRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    static const char *oneofs[] = {
      "property",
    };
    [localDescriptor setupOneofs:oneofs
                           count:(uint32_t)(sizeof(oneofs) / sizeof(char*))
                   firstHasIndex:-1];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001\010\000\003\n\000\005\t\000\t\t\000\n\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

void GDAUpdateMembershipRequest_ClearPropertyOneOfCase(GDAUpdateMembershipRequest *message) {
  GPBDescriptor *descriptor = [message descriptor];
  GPBOneofDescriptor *oneof = [descriptor.oneofs objectAtIndex:0];
  GPBMaybeClearOneof(message, oneof, -1, 0);
}
#pragma mark - GDAListMyMemberStoreRequest

@implementation GDAListMyMemberStoreRequest

@dynamic lastUpdated;

typedef struct GDAListMyMemberStoreRequest__storage_ {
  uint32_t _has_storage_[1];
  int64_t lastUpdated;
} GDAListMyMemberStoreRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "lastUpdated",
        .dataTypeSpecific.className = NULL,
        .number = GDAListMyMemberStoreRequest_FieldNumber_LastUpdated,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GDAListMyMemberStoreRequest__storage_, lastUpdated),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GDAListMyMemberStoreRequest class]
                                     rootClass:[GDAStoreMemberRoot class]
                                          file:GDAStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GDAListMyMemberStoreRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GDAListMembershipByStoreRequest

@implementation GDAListMembershipByStoreRequest

@dynamic storeUuid;
@dynamic from;
@dynamic size;

typedef struct GDAListMembershipByStoreRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t from;
  int32_t size;
  NSString *storeUuid;
} GDAListMembershipByStoreRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "storeUuid",
        .dataTypeSpecific.className = NULL,
        .number = GDAListMembershipByStoreRequest_FieldNumber_StoreUuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GDAListMembershipByStoreRequest__storage_, storeUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "from",
        .dataTypeSpecific.className = NULL,
        .number = GDAListMembershipByStoreRequest_FieldNumber_From,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GDAListMembershipByStoreRequest__storage_, from),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "size",
        .dataTypeSpecific.className = NULL,
        .number = GDAListMembershipByStoreRequest_FieldNumber_Size,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GDAListMembershipByStoreRequest__storage_, size),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GDAListMembershipByStoreRequest class]
                                     rootClass:[GDAStoreMemberRoot class]
                                          file:GDAStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GDAListMembershipByStoreRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GDAListMembershipByMemberRequest

@implementation GDAListMembershipByMemberRequest

@dynamic userUuid;
@dynamic from;
@dynamic size;

typedef struct GDAListMembershipByMemberRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t from;
  int32_t size;
  NSString *userUuid;
} GDAListMembershipByMemberRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userUuid",
        .dataTypeSpecific.className = NULL,
        .number = GDAListMembershipByMemberRequest_FieldNumber_UserUuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GDAListMembershipByMemberRequest__storage_, userUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "from",
        .dataTypeSpecific.className = NULL,
        .number = GDAListMembershipByMemberRequest_FieldNumber_From,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GDAListMembershipByMemberRequest__storage_, from),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "size",
        .dataTypeSpecific.className = NULL,
        .number = GDAListMembershipByMemberRequest_FieldNumber_Size,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GDAListMembershipByMemberRequest__storage_, size),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GDAListMembershipByMemberRequest class]
                                     rootClass:[GDAStoreMemberRoot class]
                                          file:GDAStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GDAListMembershipByMemberRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\003\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GDAMembershipResponse

@implementation GDAMembershipResponse

@dynamic hasStatus, status;
@dynamic hasMembership, membership;
@dynamic from;

typedef struct GDAMembershipResponse__storage_ {
  uint32_t _has_storage_[1];
  int32_t from;
  GDAMembership *membership;
  GDAStatus *status;
} GDAMembershipResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "membership",
        .dataTypeSpecific.className = GPBStringifySymbol(GDAMembership),
        .number = GDAMembershipResponse_FieldNumber_Membership,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GDAMembershipResponse__storage_, membership),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "from",
        .dataTypeSpecific.className = NULL,
        .number = GDAMembershipResponse_FieldNumber_From,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GDAMembershipResponse__storage_, from),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = GPBStringifySymbol(GDAStatus),
        .number = GDAMembershipResponse_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GDAMembershipResponse__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GDAMembershipResponse class]
                                     rootClass:[GDAStoreMemberRoot class]
                                          file:GDAStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GDAMembershipResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GDABanMembershipRequest

@implementation GDABanMembershipRequest

@dynamic userUuid;
@dynamic storeUuid;
@dynamic active;

typedef struct GDABanMembershipRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *userUuid;
  NSString *storeUuid;
} GDABanMembershipRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userUuid",
        .dataTypeSpecific.className = NULL,
        .number = GDABanMembershipRequest_FieldNumber_UserUuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GDABanMembershipRequest__storage_, userUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "storeUuid",
        .dataTypeSpecific.className = NULL,
        .number = GDABanMembershipRequest_FieldNumber_StoreUuid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GDABanMembershipRequest__storage_, storeUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "active",
        .dataTypeSpecific.className = NULL,
        .number = GDABanMembershipRequest_FieldNumber_Active,
        .hasIndex = 2,
        .offset = 3,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GDABanMembershipRequest class]
                                     rootClass:[GDAStoreMemberRoot class]
                                          file:GDAStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GDABanMembershipRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\010\000\005\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GDABanMembershipResponse

@implementation GDABanMembershipResponse

@dynamic hasStatus, status;
@dynamic hasMembership, membership;

typedef struct GDABanMembershipResponse__storage_ {
  uint32_t _has_storage_[1];
  GDAMembership *membership;
  GDAStatus *status;
} GDABanMembershipResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "membership",
        .dataTypeSpecific.className = GPBStringifySymbol(GDAMembership),
        .number = GDABanMembershipResponse_FieldNumber_Membership,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GDABanMembershipResponse__storage_, membership),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = GPBStringifySymbol(GDAStatus),
        .number = GDABanMembershipResponse_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GDABanMembershipResponse__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GDABanMembershipResponse class]
                                     rootClass:[GDAStoreMemberRoot class]
                                          file:GDAStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GDABanMembershipResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - GDAMembership

@implementation GDAMembership

@dynamic userUuid;
@dynamic memberType;
@dynamic storeUuid;
@dynamic storeName;
@dynamic storeLogo;
@dynamic hasLocation, location;
@dynamic active;
@dynamic created;
@dynamic lastUpdated;

typedef struct GDAMembership__storage_ {
  uint32_t _has_storage_[1];
  NSString *userUuid;
  NSString *memberType;
  NSString *storeUuid;
  NSString *storeName;
  NSString *storeLogo;
  GDALocation *location;
  int64_t created;
  int64_t lastUpdated;
} GDAMembership__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userUuid",
        .dataTypeSpecific.className = NULL,
        .number = GDAMembership_FieldNumber_UserUuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GDAMembership__storage_, userUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "memberType",
        .dataTypeSpecific.className = NULL,
        .number = GDAMembership_FieldNumber_MemberType,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GDAMembership__storage_, memberType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "storeUuid",
        .dataTypeSpecific.className = NULL,
        .number = GDAMembership_FieldNumber_StoreUuid,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GDAMembership__storage_, storeUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "storeName",
        .dataTypeSpecific.className = NULL,
        .number = GDAMembership_FieldNumber_StoreName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GDAMembership__storage_, storeName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "storeLogo",
        .dataTypeSpecific.className = NULL,
        .number = GDAMembership_FieldNumber_StoreLogo,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(GDAMembership__storage_, storeLogo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "location",
        .dataTypeSpecific.className = GPBStringifySymbol(GDALocation),
        .number = GDAMembership_FieldNumber_Location,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(GDAMembership__storage_, location),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "active",
        .dataTypeSpecific.className = NULL,
        .number = GDAMembership_FieldNumber_Active,
        .hasIndex = 6,
        .offset = 7,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "created",
        .dataTypeSpecific.className = NULL,
        .number = GDAMembership_FieldNumber_Created,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(GDAMembership__storage_, created),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "lastUpdated",
        .dataTypeSpecific.className = NULL,
        .number = GDAMembership_FieldNumber_LastUpdated,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(GDAMembership__storage_, lastUpdated),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[GDAMembership class]
                                     rootClass:[GDAStoreMemberRoot class]
                                          file:GDAStoreMemberRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GDAMembership__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\001\010\000\003\n\000\005\t\000\007\t\000\t\t\000\036\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
