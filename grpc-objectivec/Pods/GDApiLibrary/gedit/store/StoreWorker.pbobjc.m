// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gedit/store/store_worker.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "gedit/store/StoreWorker.pbobjc.h"
 #import "gedit/Common.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - STWRKStoreWorkerRoot

@implementation STWRKStoreWorkerRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - STWRKStoreWorkerRoot_FileDescriptor

static GPBFileDescriptor *STWRKStoreWorkerRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"gedit.store"
                                                 objcPrefix:@"STWRK"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - STWRKAddWorkershipRequest

@implementation STWRKAddWorkershipRequest

@dynamic storeUuid;
@dynamic workerUuid;

typedef struct STWRKAddWorkershipRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *storeUuid;
  NSString *workerUuid;
} STWRKAddWorkershipRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "storeUuid",
        .dataTypeSpecific.className = NULL,
        .number = STWRKAddWorkershipRequest_FieldNumber_StoreUuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STWRKAddWorkershipRequest__storage_, storeUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "workerUuid",
        .dataTypeSpecific.className = NULL,
        .number = STWRKAddWorkershipRequest_FieldNumber_WorkerUuid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STWRKAddWorkershipRequest__storage_, workerUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STWRKAddWorkershipRequest class]
                                     rootClass:[STWRKStoreWorkerRoot class]
                                          file:STWRKStoreWorkerRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STWRKAddWorkershipRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\t\000\003\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STWRKListWorkshipByStoreRequest

@implementation STWRKListWorkshipByStoreRequest

@dynamic storeUuid;
@dynamic from;
@dynamic size;

typedef struct STWRKListWorkshipByStoreRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t from;
  int32_t size;
  NSString *storeUuid;
} STWRKListWorkshipByStoreRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "storeUuid",
        .dataTypeSpecific.className = NULL,
        .number = STWRKListWorkshipByStoreRequest_FieldNumber_StoreUuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STWRKListWorkshipByStoreRequest__storage_, storeUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "from",
        .dataTypeSpecific.className = NULL,
        .number = STWRKListWorkshipByStoreRequest_FieldNumber_From,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STWRKListWorkshipByStoreRequest__storage_, from),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "size",
        .dataTypeSpecific.className = NULL,
        .number = STWRKListWorkshipByStoreRequest_FieldNumber_Size,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(STWRKListWorkshipByStoreRequest__storage_, size),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STWRKListWorkshipByStoreRequest class]
                                     rootClass:[STWRKStoreWorkerRoot class]
                                          file:STWRKStoreWorkerRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STWRKListWorkshipByStoreRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STWRKListMyWorkinStoreRequest

@implementation STWRKListMyWorkinStoreRequest

@dynamic lastUpdated;

typedef struct STWRKListMyWorkinStoreRequest__storage_ {
  uint32_t _has_storage_[1];
  int64_t lastUpdated;
} STWRKListMyWorkinStoreRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "lastUpdated",
        .dataTypeSpecific.className = NULL,
        .number = STWRKListMyWorkinStoreRequest_FieldNumber_LastUpdated,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STWRKListMyWorkinStoreRequest__storage_, lastUpdated),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STWRKListMyWorkinStoreRequest class]
                                     rootClass:[STWRKStoreWorkerRoot class]
                                          file:STWRKStoreWorkerRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STWRKListMyWorkinStoreRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STWRKGetMyCurrentWorkinStoreRequest

@implementation STWRKGetMyCurrentWorkinStoreRequest


typedef struct STWRKGetMyCurrentWorkinStoreRequest__storage_ {
  uint32_t _has_storage_[1];
} STWRKGetMyCurrentWorkinStoreRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STWRKGetMyCurrentWorkinStoreRequest class]
                                     rootClass:[STWRKStoreWorkerRoot class]
                                          file:STWRKStoreWorkerRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(STWRKGetMyCurrentWorkinStoreRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STWRKListWorkshipByWorkerRequest

@implementation STWRKListWorkshipByWorkerRequest

@dynamic workerUuid;
@dynamic from;
@dynamic size;

typedef struct STWRKListWorkshipByWorkerRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t from;
  int32_t size;
  NSString *workerUuid;
} STWRKListWorkshipByWorkerRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "workerUuid",
        .dataTypeSpecific.className = NULL,
        .number = STWRKListWorkshipByWorkerRequest_FieldNumber_WorkerUuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STWRKListWorkshipByWorkerRequest__storage_, workerUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "from",
        .dataTypeSpecific.className = NULL,
        .number = STWRKListWorkshipByWorkerRequest_FieldNumber_From,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STWRKListWorkshipByWorkerRequest__storage_, from),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "size",
        .dataTypeSpecific.className = NULL,
        .number = STWRKListWorkshipByWorkerRequest_FieldNumber_Size,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(STWRKListWorkshipByWorkerRequest__storage_, size),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STWRKListWorkshipByWorkerRequest class]
                                     rootClass:[STWRKStoreWorkerRoot class]
                                          file:STWRKStoreWorkerRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STWRKListWorkshipByWorkerRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\003\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STWRKWorkshipResponse

@implementation STWRKWorkshipResponse

@dynamic hasStatus, status;
@dynamic hasOwnership, ownership;
@dynamic from;

typedef struct STWRKWorkshipResponse__storage_ {
  uint32_t _has_storage_[1];
  int32_t from;
  STWRKWorkship *ownership;
  COMMONStatus *status;
} STWRKWorkshipResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "ownership",
        .dataTypeSpecific.className = GPBStringifySymbol(STWRKWorkship),
        .number = STWRKWorkshipResponse_FieldNumber_Ownership,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STWRKWorkshipResponse__storage_, ownership),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "from",
        .dataTypeSpecific.className = NULL,
        .number = STWRKWorkshipResponse_FieldNumber_From,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(STWRKWorkshipResponse__storage_, from),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "status",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONStatus),
        .number = STWRKWorkshipResponse_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STWRKWorkshipResponse__storage_, status),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STWRKWorkshipResponse class]
                                     rootClass:[STWRKStoreWorkerRoot class]
                                          file:STWRKStoreWorkerRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STWRKWorkshipResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STWRKBanWorkshipRequest

@implementation STWRKBanWorkshipRequest

@dynamic workerUuid;
@dynamic storeUuid;
@dynamic active;

typedef struct STWRKBanWorkshipRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *workerUuid;
  NSString *storeUuid;
} STWRKBanWorkshipRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "workerUuid",
        .dataTypeSpecific.className = NULL,
        .number = STWRKBanWorkshipRequest_FieldNumber_WorkerUuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STWRKBanWorkshipRequest__storage_, workerUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "storeUuid",
        .dataTypeSpecific.className = NULL,
        .number = STWRKBanWorkshipRequest_FieldNumber_StoreUuid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STWRKBanWorkshipRequest__storage_, storeUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "active",
        .dataTypeSpecific.className = NULL,
        .number = STWRKBanWorkshipRequest_FieldNumber_Active,
        .hasIndex = 2,
        .offset = 3,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STWRKBanWorkshipRequest class]
                                     rootClass:[STWRKStoreWorkerRoot class]
                                          file:STWRKStoreWorkerRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STWRKBanWorkshipRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\n\000\005\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - STWRKWorkship

@implementation STWRKWorkship

@dynamic uuid;
@dynamic userUuid;
@dynamic storeUuid;
@dynamic userName;
@dynamic userLogo;
@dynamic storeName;
@dynamic storeLogo;
@dynamic hasLocation, location;
@dynamic active;
@dynamic created;
@dynamic lastUpdated;

typedef struct STWRKWorkship__storage_ {
  uint32_t _has_storage_[1];
  NSString *uuid;
  NSString *userUuid;
  NSString *storeUuid;
  NSString *userName;
  NSString *userLogo;
  NSString *storeName;
  NSString *storeLogo;
  COMMONLocation *location;
  int64_t created;
  int64_t lastUpdated;
} STWRKWorkship__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "uuid",
        .dataTypeSpecific.className = NULL,
        .number = STWRKWorkship_FieldNumber_Uuid,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(STWRKWorkship__storage_, uuid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userUuid",
        .dataTypeSpecific.className = NULL,
        .number = STWRKWorkship_FieldNumber_UserUuid,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(STWRKWorkship__storage_, userUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "storeUuid",
        .dataTypeSpecific.className = NULL,
        .number = STWRKWorkship_FieldNumber_StoreUuid,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(STWRKWorkship__storage_, storeUuid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userName",
        .dataTypeSpecific.className = NULL,
        .number = STWRKWorkship_FieldNumber_UserName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(STWRKWorkship__storage_, userName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userLogo",
        .dataTypeSpecific.className = NULL,
        .number = STWRKWorkship_FieldNumber_UserLogo,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(STWRKWorkship__storage_, userLogo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "storeName",
        .dataTypeSpecific.className = NULL,
        .number = STWRKWorkship_FieldNumber_StoreName,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(STWRKWorkship__storage_, storeName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "storeLogo",
        .dataTypeSpecific.className = NULL,
        .number = STWRKWorkship_FieldNumber_StoreLogo,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(STWRKWorkship__storage_, storeLogo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "location",
        .dataTypeSpecific.className = GPBStringifySymbol(COMMONLocation),
        .number = STWRKWorkship_FieldNumber_Location,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(STWRKWorkship__storage_, location),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "active",
        .dataTypeSpecific.className = NULL,
        .number = STWRKWorkship_FieldNumber_Active,
        .hasIndex = 8,
        .offset = 9,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "created",
        .dataTypeSpecific.className = NULL,
        .number = STWRKWorkship_FieldNumber_Created,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(STWRKWorkship__storage_, created),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "lastUpdated",
        .dataTypeSpecific.className = NULL,
        .number = STWRKWorkship_FieldNumber_LastUpdated,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(STWRKWorkship__storage_, lastUpdated),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[STWRKWorkship class]
                                     rootClass:[STWRKStoreWorkerRoot class]
                                          file:STWRKStoreWorkerRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(STWRKWorkship__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\003\010\000\005\t\000\007\010\000\t\010\000\014\t\000\017\t\000\036\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
