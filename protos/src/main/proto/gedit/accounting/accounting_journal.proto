// Copyright 2015, gRPC Authors
// All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
package gedit.accounting;

option java_multiple_files = true;
option java_package = "com.github.conanchen.gedit.accounting.journal.grpc";
option java_outer_classname = "AccountingJournalProto";
option objc_class_prefix = "GDA";

import "gedit/common.proto";
import "gedit/accounting/accounting_event.proto";

// The bonus service definition.
//https://accountingexplained.com/financial/cycle/
//https://medium.com/@RobertKhou/double-entry-accounting-in-a-relational-database-2b7838a5d7f8
service AccountingJournalApi {

    rpc UpsertJournal (UpsertJournalRequest) returns (JournalResponse) {
    }

    rpc GetJournal (GetJournalRequest) returns (JournalResponse) {
    }

    rpc ListJournal (ListJournalRequest) returns (stream JournalResponse) {
    }
}

message UpsertJournalRequest {
    oneof event {
        PaymentCreatedEvent paymentCreatedEvent = 1;
        UserVerifiedEvent userVerifiedEvent = 2;
        StoreVerifiedEvent storeCreatedEvent = 3;
    }
}

message ListJournalRequest {

    int32 from = 100;
    int32 size = 101;

}

message GetJournalRequest {
    string uuid = 1;
}

message JournalResponse {
    Status status = 999;
    Journal journal = 1;
}

message Journal {
    string uuid = 11;
    int64 created = 12;
    oneof event {
        PaymentCreatedEvent paymentCreatedEvent = 1;
        UserVerifiedEvent userVerifiedEvent = 2;
        StoreVerifiedEvent storeVerifiedEvent = 3;
    }

    int64 postingsCreated = 34;
}

