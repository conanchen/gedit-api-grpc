// Copyright 2015, gRPC Authors
// All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
package gedit.accounting;

option java_multiple_files = true;
option java_package = "com.github.conanchen.gedit.accounting.rewardsif.grpc";
option java_outer_classname = "AccountingRewardsifProto";
option objc_class_prefix = "ACCNT";

import "gedit/common.proto";
import "gedit/accounting/accounting_event.proto";

// The bonus service definition.
//https://accountingexplained.com/financial/cycle/
//https://medium.com/@RobertKhou/double-entry-accounting-in-a-relational-database-2b7838a5d7f8
service AccountingRewardsIfEventApi {

    rpc QueryRewardsIfEvent (QueryRewardsIfEventRequest) returns (stream RewardIfEventResponse) {
        //咨询发生某种事件将会给相关的人员的奖励如：积分扣减、奖励、返还、抵扣
    }

}

message QueryRewardsIfEventRequest {
    oneof event {
        IfPaymentCreatedEvent ifPaymentCreatedEvent = 1;
        IfUserVerifiedEvent ifUserVerifiedEvent = 2;
        IfStoreVerifiedEvent ifStoreCreatedEvent = 3;
    }
}

message RewardIfEventResponse {
    Status status = 999;
    repeated RewardIfEvent rewardIfEvent = 1;
}

message RewardIfEvent {

    //咨询发生某种事件将会给相关的人员的奖励如：积分扣减、奖励、返还、抵扣
    string userUuid = 1; //被奖励用户的UUID

    int32 pointsPay = 11; //奖励项1：可用多少积分抵扣金额
    int32 pointsRepay = 12; //奖励项2：可获取多少积分返还
    //int32 xxxxRepay = 13; //奖励项3：xxxxxx

    string comment = 20;
}

message IfPaymentCreatedEvent {

    string payerUuid = 11; //顾客
    string payeeUuid = 12; //收款人
    string payeeStoreUuid = 13;
    string payeeWorkerUuid = 14;
    int32 shouldpay = 15; //应付金额

    PaymentChannel channel = 26; //支付通道如支付宝、微信、云闪付
}

message IfUserVerifiedEvent {
    string userUuid = 11;
}

message IfStoreVerifiedEvent {
    string storeUuid = 11;
}
