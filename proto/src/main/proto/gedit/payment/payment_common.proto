// Copyright 2015, gRPC Authors
// All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
package gedit.payment;

option java_multiple_files = true;
option java_package = "com.github.conanchen.gedit.payment.common.grpc";
option java_outer_classname = "PaymentCommonProto";
option objc_class_prefix = "PMCOMM";

import "gedit/common.proto";


message PaymentResponse {
    Status status = 999;
    Payment payment = 1;
}

message Payment {
    string uuid = 1; //支付单编号

    string payerCode = 10; //支付人的付款码
    string payerUuid = 11; //支付人

    string payeeCode = 21; //店员、收银员的收款码
    string payeeUuid = 22; //收款人（其实是店主）
    string payeeStoreUuid = 23; //收款店铺
    string payeeWorkerUuid = 24; //收款员工
    //create following info when return from PaymentChannel支付宝、微信等返回时
    int32 shouldPay = 30; //应付金额 = 实付金额 + 实付积分等价金额
    int32 actualPay = 31; //实付金额
    int32 pointsPay = 32; //实付积分代替金额
    int32 pointsRepay = 33; //返还积分
    bool isPointsPay = 34; //是否使用积分抵扣一定金额

    PaymentChannel paymentChannel = 40; //支付通道如支付宝、微信、云闪付
    string paymentChannelSignature = 41; //微信或支付宝预定单签名，使用该签名可以直接调起支付.

    PaymentStatus paymentStatus = 50;
    int64 created = 51;

    enum PaymentStatus {
        NEW = 0;
        INPROGRESS = 60;
        FAILED = 61;
        OK = 62;
    }
}


message PreparePayment {
    string payerCode = 11; //顾客的付款码
    string payeeUuid = 12; //收款人（其实是店主）
    string payeeStoreUuid = 13; //收款店铺
    string payeeWorkerUuid = 14; //收款员工

    int32 shouldPay = 15; //应付金额 = 实付金额 + 实付积分等价金额
    int32 actualPay = 16; //实付金额
    int32 pointsPay = 17; //实付积分代替金额
    int32 pointsRepay = 18; //返还积分
    bool isPointsPay = 19; //是否使用积分抵扣一定金额

}

