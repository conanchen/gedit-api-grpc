// Copyright 2015, gRPC Authors
// All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
package accounting.tx;

option java_multiple_files = true;
option java_package = "com.github.conanchen.gedit.accounting.tx.grpc";
option java_outer_classname = "AccountingTxProto";
option objc_class_prefix = "ACCTX";

import "common/common.proto";

// The bonus service definition.
//https://accountingexplained.com/financial/cycle/
//https://medium.com/@RobertKhou/double-entry-accounting-in-a-relational-database-2b7838a5d7f8
service AccountingTXApi {

    rpc UpsertJournal (UpsertJournalRequest) returns (JournalResponse) {
        //will compute postings at the same time when save Journal
    }

    rpc GetJournal (GetJournalRequest) returns (JournalResponse) {
    }

    rpc ListJournal (ListJournalRequest) returns (stream JournalResponse) {
    }

    rpc GetPosting (GetPostingRequest) returns (PostingResponse) {
    }

    rpc ListPosting (ListPostingRequest) returns (stream PostingResponse) {
    }

    rpc ListBalance (ListBalanceRequest) returns (stream BalanceResponse) {
    }

}

message UpsertJournalRequest {
    oneof event {
        PaymentCreatedEvent paymentCreatedEvent = 1;
        UserVerifiedEvent userVerifiedEvent = 2;
        StoreVerifiedEvent storeCreatedEvent = 3;
    }
}

message ListJournalRequest {

    int32 from = 100;
    int32 size = 101;

}

message GetJournalRequest {
    string uuid = 1;
}

message JournalResponse {
    common.Status status = 999;
    Journal journal = 1;
}

message Journal {
    string uuid = 11;
    int64 created = 12;
    oneof event {
        PaymentCreatedEvent paymentCreatedEvent = 1;
        UserVerifiedEvent userVerifiedEvent = 2;
        StoreVerifiedEvent storeVerifiedEvent = 3;
    }

    repeated Posting postings=33;
    int64 postingsCreated = 34;
}



message PaymentCreatedEvent {
    //uuid unique
    string uuid = 1; //支付单编号 unique

    string payerId = 11; //支付人
    string payeeId = 12; //收款人
    string payeeStoreId = 13;
    string payeeWorkerId = 14;
    int32 shouldpay = 15; //应付金额 = 实付金额 + 实付积分等价金额
    int32 actualpay = 16; //实付金额
    int32 bonuspay = 17; //实付积分代替金额

    string channel = 26; //支付通道如支付宝、微信、云闪付
    int64 created = 27;
}

message UserVerifiedEvent {
    //userId+introducerId unique
    string userId = 11;
    string introducerId = 12;
    int64 created = 14;
}

message StoreVerifiedEvent {
    //storeId+introducerId unique
    string storeId = 11;
    string introducerId = 12;
    string storeOwnerId = 13;
    int64 created = 14;
}


message ListPostingRequest {
    string userId = 11;
    //accountId+journalId unique
    string accountId = 12; //optional
    string journalId = 13; //optional

    int32 from = 100;
    int32 size = 101;

}

message GetPostingRequest {
    string uuid = 1;
}

message PostingResponse {
    common.Status status = 999;
    Posting posting = 1;
}

message Posting {
    string uuid = 1;

    string userId = 11;
    //accountId+journalId unique
    string accountId = 12;
    string journalId = 13;

    int32 amount = 14;
    int64 created = 15;
    string comment = 16;
}




message ListBalanceRequest {
    string accountUuid = 1;

    int32 from = 100;
    int32 size = 101;

}

message BalanceResponse {
    common.Status status = 999;
    Balance balance = 1;
}

message Balance {
    //| 账户编号UUID      | 前期余额  | 前期日期  | 当期变化 | 当期日期  | 当期余额 |  CRC    |
    string accountUuid = 1;
    int32 previousBalance = 15;
    int64 previousDate = 16;
    int32 currentChanges = 17;
    int64 currentDate = 18;
    int32 currentBalance = 19;
}