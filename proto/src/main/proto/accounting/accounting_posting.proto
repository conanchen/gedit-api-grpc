// Copyright 2015, gRPC Authors
// All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
package acccounting.posting;

option java_multiple_files = true;
option java_package = "com.github.conanchen.gedit.accounting.posting.grpc";
option java_outer_classname = "AccountingPostingProto";
option objc_class_prefix = "ACCPST";

import "common/common.proto";

// The bonus service definition.
//https://accountingexplained.com/financial/cycle/
//https://medium.com/@RobertKhou/double-entry-accounting-in-a-relational-database-2b7838a5d7f8
service AccountingPosting {

    rpc AddPostings (AddPostingsRequest) returns (stream PostingResponse) {
    }

    rpc GetPosting (GetPostingRequest) returns (PostingResponse) {
    }

    rpc ListPosting (ListPostingRequest) returns (stream PostingResponse) {
    }
}

message AddPostingsRequest {
    repeated NewPosting newPostings = 1;
    //must be added in a transaction
}

message NewPosting {
    string accountId = 12;
    string journalId = 13;
    int32 amount = 14;
}

message ListPostingRequest {
    string accountId = 12;

    int32 from = 100;
    int32 size = 101;

}

message GetPostingRequest {
    string id = 1;
}

message PostingResponse {
    common.Status status = 999;
    Posting posting = 1;
}

message Posting {
    string id = 11;
    string accountId = 12;
    string journalId = 13;
    int32 amount = 14;
    int64 created = 15;
}